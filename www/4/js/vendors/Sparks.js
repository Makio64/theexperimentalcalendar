var SPARKS={};
SPARKS.Engine={_TIMESTEP:15,_timer:null,_lastTime:null,_timerStep:10,_velocityVerlet:false,_emitters:[],_isRunning:false,add:function(emitter){this._emitters.push(emitter)},start:function(){this._lastTime=Date.now();this._timer=setTimeout(this.step,this._timerStep,this);for(var i=0,il=this._emitters.length;i<il;i++)this._emitters[i]._isRunning=true;this._isRunning=true},stop:function(){this._isRunning=false;for(var i=0,il=_emitters.length;i<il;i++)_emitters[i]._isRunning=false;clearTimeout(this._timer)},isRunning:function(){return this._isRunning},
step:function(me){var time=Date.now();var elapsed=time-me._lastTime;if(!this._velocityVerlet){var maxBlock=me._TIMESTEP*20;if(elapsed>=maxBlock)elapsed=maxBlock;while(elapsed>=me._TIMESTEP){me.update(me._TIMESTEP/1E3);elapsed-=me._TIMESTEP}me._lastTime=time-elapsed}else{me.update(elapsed/1E3);me._lastTime=time}setTimeout(me.step,me._timerStep,me)},update:function(time){for(var i=0,il=this._emitters.length;i<il;i++)this._emitters[i].update(time)}};
SPARKS.Emitter=function(counter){this._counter=counter?counter:new SPARKS.SteadyCounter(10);this._particles=[];this._initializers=[];this._actions=[];this._activities=[];this._handlers=[];this.callbacks={}};
SPARKS.Emitter.prototype={_TIMESTEP:15,_timer:null,_lastTime:null,_timerStep:10,_velocityVerlet:false,_isRunning:false,start:function(){this._lastTime=Date.now();this._timer=setTimeout(this.step,this._timerStep,this);this._isRunning=true},stop:function(){this._isRunning=false;clearTimeout(this._timer)},isRunning:function(){return this._isRunning},step:function(emitter){var time=Date.now();var elapsed=time-emitter._lastTime;if(!this._velocityVerlet){var maxBlock=emitter._TIMESTEP*20;if(elapsed>=maxBlock)elapsed=
maxBlock;while(elapsed>=emitter._TIMESTEP){emitter.update(emitter._TIMESTEP/1E3);elapsed-=emitter._TIMESTEP}emitter._lastTime=time-elapsed}else{emitter.update(elapsed/1E3);emitter._lastTime=time}if(emitter._isRunning)setTimeout(emitter.step,emitter._timerStep,emitter)},update:function(time){var len=this._counter.updateEmitter(this,time);for(i=0;i<len;i++)this.createParticle();len=this._activities.length;for(i=0;i<len;i++)this._activities[i].update(this,time);len=this._actions.length;var action;var len2=
this._particles.length;for(j=0;j<len;j++){action=this._actions[j];for(i=0;i<len2;++i){particle=this._particles[i];action.update(this,particle,time)}}for(i=len2;i--;){particle=this._particles[i];if(particle.isDead){this._particles.splice(i,1);this.dispatchEvent("dead",particle);SPARKS.VectorPool.release(particle.position);SPARKS.VectorPool.release(particle.velocity)}else this.dispatchEvent("updated",particle)}this.dispatchEvent("loopUpdated")},createParticle:function(){var particle=new SPARKS.Particle;
var len=this._initializers.length,i;for(i=0;i<len;i++)this._initializers[i].initialize(this,particle);this._particles.push(particle);this.dispatchEvent("created",particle);return particle},addInitializer:function(initializer){this._initializers.push(initializer)},addAction:function(action){this._actions.push(action)},removeInitializer:function(initializer){var index=this._initializers.indexOf(initializer);if(index>-1)this._initializers.splice(index,1)},removeAction:function(action){var index=this._actions.indexOf(action);
if(index>-1)this._actions.splice(index,1)},addCallback:function(name,callback){this.callbacks[name]=callback},removeCallback:function(name){delete this.callbacks[name]},dispatchEvent:function(name,args){var callback=this.callbacks[name];if(callback)callback(args)}};SPARKS.EVENT_PARTICLE_CREATED="created";SPARKS.EVENT_PARTICLE_UPDATED="updated";SPARKS.EVENT_PARTICLE_DEAD="dead";SPARKS.EVENT_LOOP_UPDATED="loopUpdated";SPARKS.SteadyCounter=function(rate){this.rate=rate;this.leftover=0};
SPARKS.SteadyCounter.prototype.updateEmitter=function(emitter,time){var targetRelease=time*this.rate+this.leftover;var actualRelease=Math.floor(targetRelease);this.leftover=targetRelease-actualRelease;return actualRelease};SPARKS.ShotCounter=function(particles){this.particles=particles;this.used=false};SPARKS.ShotCounter.prototype.updateEmitter=function(emitter,time){if(this.used)return 0;else this.used=true;return this.particles};
SPARKS.Particle=function(){this.lifetime=0;this.age=0;this.energy=1;this.isDead=false;this.target=null;this.position=SPARKS.VectorPool.get().set(0,0,0);this.velocity=SPARKS.VectorPool.get().set(0,0,0);this._oldvelocity=SPARKS.VectorPool.get().set(0,0,0)};SPARKS.Action=function(){this._priority=0};SPARKS.Age=function(easing){this._easing=easing==null?TWEEN.Easing.Linear.EaseNone:easing};
SPARKS.Age.prototype.update=function(emitter,particle,time){particle.age+=time;if(particle.age>=particle.lifetime){particle.energy=0;particle.isDead=true}else{var t=this._easing(particle.age/particle.lifetime);particle.energy=-1*t+1}};SPARKS.Move=function(){};
SPARKS.Move.prototype.update=function(emitter,particle,time){var p=particle.position;var v=particle.velocity;var old=particle._oldvelocity;if(this._velocityVerlet){p.x+=(v.x+old.x)*0.5*time;p.y+=(v.y+old.y)*0.5*time;p.z+=(v.z+old.z)*0.5*time}else{p.x+=v.x*time;p.y+=v.y*time;p.z+=v.z*time}};SPARKS.DeathZone=function(zone){this.zone=zone};SPARKS.DeathZone.prototype.update=function(emitter,particle,time){if(this.zone.contains(particle.position))particle.isDead=true};
SPARKS.ActionZone=function(action,zone){this.action=action;this.zone=zone};SPARKS.ActionZone.prototype.update=function(emitter,particle,time){if(this.zone.contains(particle.position))this.action.update(emitter,particle,time)};SPARKS.Accelerate=function(x,y,z){if(x instanceof THREE.Vector3){this.acceleration=x;return}this.acceleration=new THREE.Vector3(x,y,z)};
SPARKS.Accelerate.prototype.update=function(emitter,particle,time){var acc=this.acceleration;var v=particle.velocity;particle._oldvelocity.set(v.x,v.y,v.z);v.x+=acc.x*time;v.y+=acc.y*time;v.z+=acc.z*time};SPARKS.AccelerateFactor=function(factor){this.factor=factor};SPARKS.AccelerateFactor.prototype.update=function(emitter,particle,time){var factor=this.factor;var v=particle.velocity;var len=v.length();var adjFactor;if(len>0){adjFactor=factor*time/len;adjFactor+=1;v.multiplyScalar(adjFactor)}};
SPARKS.AccelerateVelocity=function(factor){this.factor=factor};SPARKS.AccelerateVelocity.prototype.update=function(emitter,particle,time){var factor=this.factor;var v=particle.velocity;v.z+=-v.x*factor;v.y+=v.z*factor;v.x+=v.y*factor};SPARKS.RandomDrift=function(x,y,z){if(x instanceof THREE.Vector3){this.drift=x;return}this.drift=new THREE.Vector3(x,y,z)};
SPARKS.RandomDrift.prototype.update=function(emitter,particle,time){var drift=this.drift;var v=particle.velocity;v.x+=(Math.random()-0.5)*drift.x*time;v.y+=(Math.random()-0.5)*drift.y*time;v.z+=(Math.random()-0.5)*drift.z*time};SPARKS.Zone=function(){};SPARKS.PointZone=function(pos){this.pos=pos};SPARKS.PointZone.prototype.getLocation=function(){return this.pos};SPARKS.PointZone=function(pos){this.pos=pos};SPARKS.PointZone.prototype.getLocation=function(){return this.pos};
SPARKS.LineZone=function(start,end){this.start=start;this.end=end;this._length=end.clone().subSelf(start)};SPARKS.LineZone.prototype.getLocation=function(){var len=this._length.clone();len.multiplyScalar(Math.random());return len.addSelf(this.start)};SPARKS.ParallelogramZone=function(corner,side1,side2){this.corner=corner;this.side1=side1;this.side2=side2};
SPARKS.ParallelogramZone.prototype.getLocation=function(){var d1=this.side1.clone().multiplyScalar(Math.random());var d2=this.side2.clone().multiplyScalar(Math.random());d1.addSelf(d2);return d1.addSelf(this.corner)};SPARKS.CubeZone=function(position,x,y,z){this.position=position;this.x=x;this.y=y;this.z=z};SPARKS.CubeZone.prototype.getLocation=function(){var location=this.position.clone();location.x+=Math.random()*this.x;location.y+=Math.random()*this.y;location.z+=Math.random()*this.z;return location};
SPARKS.CubeZone.prototype.contains=function(position){var startX=this.position.x;var startY=this.position.y;var startZ=this.position.z;var x=this.x;var y=this.y;var z=this.z;if(x<0){startX+=x;x=Math.abs(x)}if(y<0){startY+=y;y=Math.abs(y)}if(z<0){startZ+=z;z=Math.abs(z)}var diffX=position.x-startX;var diffY=position.y-startY;var diffZ=position.z-startZ;if(diffX>0&&diffX<x&&diffY>0&&diffY<y&&diffZ>0&&diffZ<z)return true;return false};
SPARKS.SphereCapZone=function(x,y,z,minr,maxr,angle){this.x=x;this.y=y;this.z=z;this.minr=minr;this.maxr=maxr;this.angle=angle};SPARKS.SphereCapZone.prototype.getLocation=function(){var theta=Math.PI*2*SPARKS.Utils.random();var r=SPARKS.Utils.random();var v=SPARKS.VectorPool.get().set(r*Math.cos(theta),-1/Math.tan(this.angle*SPARKS.Utils.DEGREE_TO_RADIAN),r*Math.sin(theta));var i=this.minr-(this.minr-this.maxr)*Math.random();v.multiplyScalar(i);v.__markedForReleased=true;return v};
SPARKS.Lifetime=function(min,max){this._min=min;this._max=max?max:min};SPARKS.Lifetime.prototype.initialize=function(emitter,particle){particle.lifetime=this._min+SPARKS.Utils.random()*(this._max-this._min)};SPARKS.Position=function(zone){this.zone=zone};SPARKS.Position.prototype.initialize=function(emitter,particle){var pos=this.zone.getLocation();particle.position.set(pos.x,pos.y,pos.z)};SPARKS.Velocity=function(zone){this.zone=zone};
SPARKS.Velocity.prototype.initialize=function(emitter,particle){var pos=this.zone.getLocation();particle.velocity.set(pos.x,pos.y,pos.z);if(pos.__markedForReleased){SPARKS.VectorPool.release(pos);pos.__markedForReleased=false}};SPARKS.Target=function(target,callback){this.target=target;this.callback=callback};SPARKS.Target.prototype.initialize=function(emitter,particle){if(this.callback)particle.target=this.callback();else particle.target=this.target};
SPARKS.VectorPool={__pools:[],get:function(){if(this.__pools.length>0)return this.__pools.pop();return this._addToPool()},release:function(v){this.__pools.push(v)},_addToPool:function(){for(var i=0,size=100;i<size;i++)this.__pools.push(new THREE.Vector3);return new THREE.Vector3}};
SPARKS.Utils={random:function(){return Math.random()},DEGREE_TO_RADIAN:Math.PI/180,TWOPI:Math.PI*2,getPerpendiculars:function(normal){var p1=this.getPerpendicular(normal);var p2=normal.cross(p1);p2.normalize();return[p1,p2]},getPerpendicular:function(v){if(v.x==0)return new THREE.Vector3D(1,0,0);else{var temp=new THREE.Vector3(v.y,-v.x,0);return temp.normalize()}}};